From f24c11f5080e79f36867254e7c79c4bfd0c75aa3 Mon Sep 17 00:00:00 2001
From: Paulo Sergio Travaglia <pstglia@gmail.com>
Date: Sun, 17 Jan 2016 15:23:06 -0200
Subject: [PATCH 12/27] Allow screenrecord usage on Android-x86

Selects a supported color format for screenrecord (
OMX_COLOR_FormatYUV420Planar instead of OMX_COLOR_FormatAndroidOpaque)
and removes a check on SoftVideoEncoderOMXComponent.cpp
in order to make screenrecord work on Android-x86.
---
 cmds/screenrecord/screenrecord.cpp                   |  8 +++++++-
 media/libstagefright/omx/Android.bp                  |  1 +
 .../omx/SoftVideoEncoderOMXComponent.cpp             | 12 ++++++++++--
 3 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/cmds/screenrecord/screenrecord.cpp b/cmds/screenrecord/screenrecord.cpp
index d866c18fe2..44f724188c 100644
--- a/cmds/screenrecord/screenrecord.cpp
+++ b/cmds/screenrecord/screenrecord.cpp
@@ -36,6 +36,7 @@
 #define LOG_TAG "ScreenRecord"
 #define ATRACE_TAG ATRACE_TAG_GRAPHICS
 //#define LOG_NDEBUG 0
+#include <cutils/properties.h>
 #include <utils/Log.h>
 
 #include <binder/IPCThreadState.h>
@@ -190,12 +191,17 @@ static status_t prepareEncoder(float displayFps, sp<MediaCodec>* pCodec,
                 gVideoWidth, gVideoHeight, kMimeTypeAvc, gBitRate / 1000000.0);
         fflush(stdout);
     }
+    char property[PROPERTY_VALUE_MAX];
+    bool isMesa = false;
+    if (property_get("ro.hardware.egl", property, "default") > 0)
+        if (strcmp(property, "mesa") == 0)
+            isMesa = true;
 
     sp<AMessage> format = new AMessage;
     format->setInt32(KEY_WIDTH, gVideoWidth);
     format->setInt32(KEY_HEIGHT, gVideoHeight);
     format->setString(KEY_MIME, kMimeTypeAvc);
-    format->setInt32(KEY_COLOR_FORMAT, OMX_COLOR_FormatAndroidOpaque);
+    format->setInt32(KEY_COLOR_FORMAT, isMesa ? OMX_COLOR_FormatYUV420Planar : OMX_COLOR_FormatAndroidOpaque);
     format->setInt32(KEY_BIT_RATE, gBitRate);
     format->setFloat(KEY_FRAME_RATE, displayFps);
     format->setInt32(KEY_I_FRAME_INTERVAL, 10);
diff --git a/media/libstagefright/omx/Android.bp b/media/libstagefright/omx/Android.bp
index 54c5697c14..9297f6dc22 100644
--- a/media/libstagefright/omx/Android.bp
+++ b/media/libstagefright/omx/Android.bp
@@ -121,6 +121,7 @@ cc_library_shared {
         "liblog",
         "libui",
         "libutils",
+        "libcutils",
     ],
 
     cflags: [
diff --git a/media/libstagefright/omx/SoftVideoEncoderOMXComponent.cpp b/media/libstagefright/omx/SoftVideoEncoderOMXComponent.cpp
index 11e563cdc2..15975fb397 100644
--- a/media/libstagefright/omx/SoftVideoEncoderOMXComponent.cpp
+++ b/media/libstagefright/omx/SoftVideoEncoderOMXComponent.cpp
@@ -18,6 +18,7 @@
 
 //#define LOG_NDEBUG 0
 #define LOG_TAG "SoftVideoEncoderOMXComponent"
+#include <cutils/properties.h>
 #include <utils/Log.h>
 #include <utils/misc.h>
 
@@ -397,8 +398,15 @@ OMX_ERRORTYPE SoftVideoEncoderOMXComponent::internalGetParameter(
             // XXX: For now just configure input and output buffers the same size.
             // May want to determine a more suitable output buffer size independent
             // of YUV format.
-            CHECK(mColorFormat == OMX_COLOR_FormatYUV420Planar ||
-                    mColorFormat == OMX_COLOR_FormatYUV420SemiPlanar);
+            char property[PROPERTY_VALUE_MAX];
+            bool isMesa = false;
+            if (property_get("ro.hardware.egl", property, "default") > 0)
+                if (strcmp(property, "mesa") == 0)
+                    isMesa = true;
+            if (!isMesa) {
+                CHECK(mColorFormat == OMX_COLOR_FormatYUV420Planar ||
+                        mColorFormat == OMX_COLOR_FormatYUV420SemiPlanar);
+            }
             def->nBufferSize = mWidth * mHeight * 3 / 2;
 
             return OMX_ErrorNone;
-- 
2.40.0

